#pragma once

#ifndef		_INETWORK_HH_
# define	_INETWORK_HH_

# define	_ERROR		0
# define	_SUCCESS	!(_ERROR)

#ifndef __WIN32__
	# define	_WINSOCK_DEPRECATED_NO_WARNINGS
	#include	<winsock2.h>
	#include	<ws2tcpip.h>

#elif __linux__
	#include	<arpa/inet.h>
	#include	<sys/socket.h>
	#include	<netinet/in.h>

#endif

#include <stdio.h>
#include <sys/types.h>
#include <string.h>
#include <fstream>
#include <vector> 
#include <iostream>

class INetwork
{
public:
	INetwork() {}
	virtual ~INetwork() {}

	virtual const int					sendToServer(void const *data, size_t size) = 0;
	virtual const int					receiveFromServer(void *data, unsigned int size) = 0;
	virtual const int					initClient(const char *addr, const uint16_t port) = 0;
	virtual const int					connectToServer() = 0;

protected:
	virtual const int					putError(const std::string &msg) = 0;
};

#endif	/* !_INETWORK_HH_ */