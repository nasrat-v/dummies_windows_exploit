
#include "stdafx.h"
#include "WNetwork.hh"

WNetwork::WNetwork()
{
}

WNetwork::~WNetwork()
{
}

const int			WNetwork::putError(const std::string &msg)
{
	std::cerr << msg.c_str() << std::endl;
	return (_ERROR);
}

const int			WNetwork::initClient(const char *addr, const uint16_t port)
{
	WSADATA	wsaData;

	if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0)
		return (putError("[KO]\tError: WSA startup failed"));
    _data.sin_port = htons(port);
    _data.sin_family = AF_INET;
    _data.sin_addr.s_addr = inet_addr(addr);
	if ((_sock = WSASocket(AF_INET, SOCK_STREAM, IPPROTO_TCP, NULL, 0, 0)) == -1)
		return (putError("[KO]\tError: socket creation failed"));
	std::cout << "Client initialized on socket " << _sock << std::endl;
	return (_SUCCESS);
}

const int			WNetwork::connectToServer()
{
	if (connect(_sock, (SOCKADDR*)&_data, sizeof(_data)) < 0)
		return (putError("[KO]\tError: connect failed"));
	std::cout << "Client connected" << std::endl;
	return (_SUCCESS);
}

const int			WNetwork::sendToServer(void const *data, size_t size)
{
	DWORD	total;
	DWORD	byte;
	WSABUF	tmp;

	total = 0;
	byte = 0;
	while (total != size)
	{
		tmp.buf = &((char*)data)[total];
		tmp.len = size - total;
		if (static_cast<int>(WSASendTo(_sock, &tmp, 1, &byte, 0, (SOCKADDR*)&_data, sizeof(SOCKADDR), NULL, NULL)) != 0)
		{
			std::cerr << "Error: send data to server failed  " << WSAGetLastError() << std::endl;
			return (-1);
		}
		total += byte;
	}
	return (total);
}

const int			WNetwork::receiveFromServer(void *data, unsigned int size)
{
	DWORD	byte = 0;
	WSABUF	tmp;
	DWORD	flag = 0;
	socklen_t addrlen = sizeof(sockaddr_in);

	tmp.buf = (char*)data;
	tmp.len = size;
	if (static_cast<int>(WSARecvFrom(_sock, &tmp, 1, &byte, &flag, (SOCKADDR*)&_data, &addrlen, NULL, NULL)) != 0)
		return (-1);
	return (static_cast<int>(byte));
}